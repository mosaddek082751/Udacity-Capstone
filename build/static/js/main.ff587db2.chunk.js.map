{"version":3,"sources":["serviceWorker.ts","config.ts","components/Callback.tsx","components/EditTodo.tsx","api/todos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Todos.tsx","App.tsx","routing.tsx","auth/Auth.js","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","authConfig","Callback","UploadState","Dimmer","active","Loader","content","getTodos","idToken","a","console","log","Axios","get","headers","response","data","items","createTodo","newTodo","post","JSON","stringify","item","patchTodo","todoId","updatedTodo","patch","deleteTodo","delete","getUploadUrl","uploadUrl","uploadFile","file","put","EditTodo","React","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","this","setState","handleSubmit","preventDefault","alert","setUploadState","FetchingPresignedUrl","props","auth","getIdToken","params","UploadingFile","message","render","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","LogIn","onLogin","login","onClick","size","color","NotFound","Todos","todos","newTodoName","loadingTodos","handleNameChange","value","onEditButtonClick","history","push","onTodoCreate","dueDate","calculateDueDate","name","onTodoDelete","filter","todo","onTodoCheck","pos","done","update","$set","componentDidMount","Header","as","renderCreateTodoInput","renderTodos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderTodosList","indeterminate","inline","padded","map","key","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","Date","setDate","getDate","dateFormat","App","Component","constructor","super","handleLogin","bind","handleLogout","logout","Segment","style","padding","vertical","container","stackable","generateMenu","generateCurrentPage","Menu","Item","to","position","logInLogOutButton","isAuthenticated","path","exact","component","createHistory","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","handleAuthentication","getAccessToken","renewSession","authorize","parseHash","err","authResult","accessToken","setSession","replace","error","localStorage","setItem","expiresAt","expiresIn","getTime","checkSession","error_description","removeItem","return_to","origin","ReactDOM","test","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff587db2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\nconst apiId = 'a9cw7u6s7d'\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\n\nexport const authConfig = {\n  // TODO: Create an Auth0 application and copy values from it into this map\n  domain: 'dev-mosaddek2751.auth0.com',            // Auth0 domain\n  clientId: 'TNYv0sZenu1RewSvH3LUFO4MYR81CfC0',          // Auth0 client id\n  callbackUrl: 'http://capstone-serverless-mosaddek082751.s3-website-us-east-1.amazonaws.com/callback'\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo';\nimport { CreateTodoRequest } from '../types/CreateTodoRequest';\nimport Axios from 'axios'\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest';\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n\n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Todos:', response.data)\n  return response.data.items\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(`${apiEndpoint}/todos`,  JSON.stringify(newTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/todos/${todoId}`, JSON.stringify(updatedTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  const response = await Axios.post(`${apiEndpoint}/todos/${todoId}/attachment`, '', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  await Axios.put(uploadUrl, file)\n}\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId != todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditTodo } from './components/EditTodo'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Todos } from './components/Todos'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Todos {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/todos/:todoId/edit\"\n          exact\n          render={props => {\n            return <EditTodo {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}